version = '0.1.0'

sourceSets {
    intTest {}
}
configurations {
    intTestImplementation.extendsFrom testImplementation
    intTestRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
    compileOnly 'foundation.icon:javaee-api:0.9.0'
    
    implementation 'foundation.icon:javaee-scorex:0.5.2'
    implementation 'com.github.sink772:javaee-tokens:0.6.1'
    implementation 'com.github.sink772:minimal-json:0.9.6'

    testImplementation 'foundation.icon:javaee-unittest:0.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation 'org.mockito:mockito-core:4.1.0'
    testImplementation project(':mock-contracts:dexMock')
    
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    intTestImplementation project(':testinteg')
    intTestImplementation project(':mock-contracts:rebalanceMock')
    intTestImplementation 'foundation.icon:icon-sdk:2.0.0'
}

optimizedJar {
    mainClassName = 'network.balanced.score.core.Loans'
    archivesBaseName = 'loans'
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

deployJar {
    endpoints {
        sejong {
            uri = 'https://sejong.net.solidwallet.io/api/v3'
            nid = 0x53
        }
        local {
            uri = 'http://localhost:9082/api/v3'
            nid = 0x3
        }
    }
    keystore = rootProject.hasProperty('keystoreName') ? "$keystoreName" : ''
    password = rootProject.hasProperty('keystorePass') ? "$keystorePass" : ''
    parameters {
        arg('_governance', 'hxe5679f118e093657b71967b0dfddb4d00cbd80b4')
    }
}


test {    
    useJUnitPlatform()
}

def rebalanceJar = project(':mock-contracts:rebalanceMock').getTasks().getByName('optimizedJar')
def dexJar = project(':mock-contracts:dexMock').getTasks().getByName('optimizedJar')

task integrationTest(type: Test, dependsOn: optimizedJar) {
    useJUnitPlatform()
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.intTest.output.classesDirs
    classpath = sourceSets.intTest.runtimeClasspath
    testLogging.showStandardStreams = true

    // use the common config files
    systemProperty('env.props', new File(project(':testinteg').projectDir, 'conf/env.props'))

    def prefix = 'score.path.'
    systemProperty(prefix + project.name, optimizedJar.outputJarName)
    systemProperty(prefix + 'rebalanceMock', rebalanceJar.outputJarName)
    systemProperty(prefix + 'dexMock', dexJar.outputJarName)
}
integrationTest.dependsOn(rebalanceJar)
integrationTest.dependsOn(dexJar)
